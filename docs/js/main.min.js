window.MYFL={},function(){var e={isEmail:function(e){return/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(e)},isNumber:function(e){return/^\d+$/.test(e)},isNotEmpty:function(e){return Boolean(e)}};MYFL.validation=e}(),function(){var t={},e=document.querySelector(".form-container"),n=null;function o(){t.close(),n.removeEventListener("click",o),document.removeEventListener("keydown",i)}function i(e){"Escape"===e.key&&t.close()}t.open=function(){e.classList.remove("is-hidden"),(n=document.querySelector(".form__close-button")).addEventListener("click",o),document.addEventListener("keydown",i)},t.close=function(){e.classList.add("is-hidden")},t.isValid=function(){var e=document.querySelectorAll('[data-valid="required"]'),n=document.querySelector("[data-email]").value,o=document.querySelector("[data-number]").value;return t.isAllCompleted(e)?MYFL.validation.isEmail(n)?!!MYFL.validation.isNumber(o)||(console.log("Не верный номер"),!1):(console.log("Не верный email"),!1):(console.log("Заполните пожалуйста все необходимые поля"),!1)},t.isAllCompleted=function(e){for(var n=!0,o=0;o<e.length;o++)if(!MYFL.validation.isNotEmpty(e[o].value)){n=!1;break}return n},MYFL.form=t}(),function(){var e={};e.toggleToActiveLink=function(e){for(var t,i,l,n=document.querySelectorAll(".nav__link"),o=e.dataset.link,a=0;a<n.length;a++)n[a].classList.contains("nav__link--active")&&n[a].classList.remove("nav__link--active");e.classList.add("nav__link--active"),"header"===o?window.scrollTo({top:0,behavior:"smooth"}):(e=o,e=document.querySelector("."+o).getBoundingClientRect(),o=document.querySelector(".header").offsetHeight,t=window.scrollY,i=e.top+t-o,l=null,window.requestAnimationFrame(function e(n){var o,n=n-(l=l||n);window.scrollTo(0,t+(i-t)*((o=Math.min(n/400,1))<.5?2*o*o:(4-2*o)*o-1)),n<400&&window.requestAnimationFrame(e)}))},MYFL.navigation=e}(),function(){var e=document.querySelector(".arrow-down"),n=(console.log(e),document.querySelector(".form")),o=document.querySelector(".nav");e&&e.addEventListener("click",function(e){e.preventDefault(),MYFL.form.open()}),n&&n.addEventListener("submit",function(e){e.preventDefault(),MYFL.form.isValid()?console.log("All good"):console.log("Is not valid")}),o&&o.addEventListener("click",function(e){var n=e.target;"a"===n.tagName.toLowerCase()&&(e.preventDefault(),MYFL.navigation.toggleToActiveLink(n))})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
